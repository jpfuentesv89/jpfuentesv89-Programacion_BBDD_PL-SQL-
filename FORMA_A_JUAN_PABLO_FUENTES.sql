/**
CREATE USER ETMDY_FA IDENTIFIED BY "MDY3131.ETMDY_FA"
DEFAULT TABLESPACE "USERS"
TEMPORARY TABLESPACE "TEMP";
ALTER USER ETMDY_FA QUOTA UNLIMITED ON USERS;
GRANT CREATE SESSION TO ETMDY_FA;
GRANT "RESOURCE" TO ETMDY_FA;
ALTER USER ETMDY_FA DEFAULT ROLE "RESOURCE";

SELECT * FROM DBA_DIRECTORIES;

CREATE DIRECTORY DIR_FOTOS AS 'C:\Forma_A\ANEXO_B';

GRANT READ ON DIRECTORY DIR_FOTOS TO ETMDY_FA;
*/

/** TRIGGER */

CREATE OR REPLACE TRIGGER TRG_TASAS_DE_INTERESES 
BEFORE UPDATE ON PRODUCTO
FOR EACH ROW
BEGIN
      IF  :NEW.TASAINT_PRODUCTO > :OLD.TASAINT_PRODUCTO
        THEN
            UPDATE TIPO_TRANSACCION_TARJETA
                SET TASAINT_TPTRAN_TARJETA = TASAINT_TPTRAN_TARJETA + 0.01
                WHERE COD_PRODUCTO = :OLD.COD_PRODUCTO;
      ELSE
             UPDATE TIPO_TRANSACCION_TARJETA
                SET NRO_MAXIMO_CUOTAS_TRAN = 12
                WHERE COD_PRODUCTO = :OLD.COD_PRODUCTO;
            :NEW.NRO_MAXIMO_CUOTAS_PROD := 12 ;
      END IF;
END;

/** EJECUTO CASO */
--SELECT * FROM TIPO_TRANSACCION_TARJETA WHERE COD_PRODUCTO IN  (4,2,1);

UPDATE PRODUCTO
    SET TASAINT_PRODUCTO = 0.5
    WHERE COD_PRODUCTO = 4;
    
UPDATE PRODUCTO
    SET TASAINT_PRODUCTO = 1
    WHERE COD_PRODUCTO = 2;

    
UPDATE PRODUCTO
    SET TASAINT_PRODUCTO = 0.05
    WHERE COD_PRODUCTO = 1;
/** */

CREATE OR REPLACE PACKAGE PKG_CLIENTE IS 
V_CUPO_DISP_COMPRA NUMERIC;
V_CUPO_DISP_SP_AVANCE NUMERIC;
V_CONTADOR NUMERIC;
V_AUMENTO_ANTIG NUMERIC;
V_AUMENTO_EDAD NUMERIC;
V_CONSULTA_CLIENTE VARCHAR (200) := 'SELECT CUPO_COMPRA,CUPO_SUPER_AVANCE FROM TARJETA_CLIENTE WHERE NUMRUN = :RUN';
V_INSERT_AUMENTOS_MES_CLIENTE VARCHAR (200) := 'INSERT INTO AUMENTOS_MES_CLIENTE (FECHA_PROCESO,NUMRUN,DVRUN,FECHA_NACIMIENTO,CUPO_COMPRAS,CUPO_SUPER_AVANCE)
            VALUES (:1,:2,:3,:4,:5,:6)';
PROCEDURE SP_ACTUALIZA_FOTO;
FUNCTION FN_AUMENTO_ANTIG (P_NUMRUN NUMBER) RETURN NUMBER;
FUNCTION FN_AUMENTO_EDAD  (P_NUMRUN NUMBER) RETURN NUMBER;
END PKG_CLIENTE;

CREATE OR REPLACE PACKAGE BODY PKG_CLIENTE IS 
-- PROCEDURE
PROCEDURE SP_ACTUALIZA_FOTO AS
CURSOR CUR_CLIENTE IS SELECT * FROM CLIENTE;
V_CONSUL_FOTO VARCHAR2(250) ;
V_BLOB BLOB;
V_BFILE BFILE;
V_NOMBREARCHIVO VARCHAR2(25);
FILEOPEN EXCEPTION;
PRAGMA EXCEPTION_INIT (FILEOPEN, -22288);
V_CODERROR VARCHAR2(30);
BEGIN
    
    FOR I IN CUR_CLIENTE
    
        LOOP  
            
            V_CONSUL_FOTO := 'SELECT FOTO FROM CLIENTE WHERE NUMRUN = :1 FOR UPDATE';
            EXECUTE IMMEDIATE   V_CONSUL_FOTO INTO V_BLOB USING I.NUMRUN;
            
            V_NOMBREARCHIVO := I.NUMRUN || '.JPG';
            
                BEGIN
                
                    V_BFILE := BFILENAME('DIR_FOTOS', V_NOMBREARCHIVO);
                    
                    DBMS_LOB.OPEN(V_BFILE, DBMS_LOB.LOB_READONLY);
                    
                    DBMS_LOB.LOADFROMFILE(V_BLOB, V_BFILE, DBMS_LOB.GETLENGTH(V_BFILE));
                    
                    DBMS_LOB.CLOSE(V_BFILE);
                    
                     EXCEPTION
                        WHEN FILEOPEN 
                            THEN
                                V_CODERROR := SQLCODE;
                                INSERT INTO ERROR_PROCESOS_MENSUALES
                                    VALUES(SEQ_ERROR.NEXTVAL,'PROBLEMAS CON FOTO RUT ' || I.NUMRUN,
                                            V_CODERROR || ' NON EXISTENT DIRECTORY OR FILE');
                
                END;
        
        END LOOP;

END;

-- FIN PROCEDURE

-- FUNCION 1
    FUNCTION FN_AUMENTO_ANTIG (P_NUMRUN NUMBER)
    RETURN NUMBER IS V_PORCENTAJE NUMBER;
    BEGIN 
        SELECT (TRUNC(MONTHS_BETWEEN(SYSDATE,FECHA_INSCRIPCION)/12)/100) AS ANNOS
        INTO V_PORCENTAJE
        FROM CLIENTE
        WHERE NUMRUN = P_NUMRUN;
        RETURN V_PORCENTAJE;
    END FN_AUMENTO_ANTIG;
-- FIN FUNCION 1

-- FUNCION 2 
    FUNCTION FN_AUMENTO_EDAD (P_NUMRUN NUMBER)
    RETURN NUMBER IS V_PORCENTAJE NUMBER;
    BEGIN 
        SELECT (TRUNC(MONTHS_BETWEEN(SYSDATE,FECHA_NACIMIENTO)/12)/100) AS ANNOS
        INTO V_PORCENTAJE
        FROM CLIENTE
        WHERE NUMRUN = P_NUMRUN;
        RETURN V_PORCENTAJE;
    END FN_AUMENTO_EDAD;
-- FIN FUNCION 2

END PKG_CLIENTE;

CREATE OR REPLACE PROCEDURE SP_CLIENTES AS
CURSOR CUR_CLIENTE IS SELECT *  FROM CLIENTE WHERE TO_CHAR (FECHA_NACIMIENTO,'MM') = TO_CHAR (SYSDATE,'MM') -1;  
V_CODERROR VARCHAR2(30);
BEGIN
    PKG_CLIENTE.V_CONTADOR := 0;
    PKG_CLIENTE.SP_ACTUALIZA_FOTO();
    FOR I IN CUR_CLIENTE
        LOOP       
            EXECUTE IMMEDIATE PKG_CLIENTE.V_CONSULTA_CLIENTE INTO PKG_CLIENTE.V_CUPO_DISP_COMPRA, PKG_CLIENTE.V_CUPO_DISP_SP_AVANCE USING I.NUMRUN;
            BEGIN
            PKG_CLIENTE.V_AUMENTO_ANTIG := ROUND(PKG_CLIENTE.V_CUPO_DISP_COMPRA * PKG_CLIENTE.FN_AUMENTO_ANTIG(I.NUMRUN)) + PKG_CLIENTE.V_CUPO_DISP_COMPRA;
            PKG_CLIENTE.V_AUMENTO_EDAD  := ROUND(PKG_CLIENTE.V_CUPO_DISP_SP_AVANCE * PKG_CLIENTE.FN_AUMENTO_EDAD (I.NUMRUN)) + PKG_CLIENTE.V_CUPO_DISP_SP_AVANCE;
                        
            EXECUTE IMMEDIATE PKG_CLIENTE.V_INSERT_AUMENTOS_MES_CLIENTE  USING SYSDATE,I.NUMRUN,I.DVRUN,I.FECHA_NACIMIENTO,PKG_CLIENTE.V_AUMENTO_ANTIG,PKG_CLIENTE.V_AUMENTO_EDAD;
            PKG_CLIENTE.V_CONTADOR := PKG_CLIENTE.V_CONTADOR +1;
             EXCEPTION
                    WHEN OTHERS 
                        THEN
                            V_CODERROR := SQLCODE;
                            INSERT INTO ERROR_PROCESOS_MENSUALES
                                VALUES(SEQ_ERROR.NEXTVAL,'SP_CLIENTES',
                                        V_CODERROR || ' Divisor is equal to zero');
            END;           
        END LOOP;
    DBMS_OUTPUT.PUT_LINE('Cantidad de Clientes Procesados MES: '|| (TO_CHAR (SYSDATE,'MM')-1)||' es de:'|| PKG_CLIENTE.V_CONTADOR);
END;

EXEC SP_CLIENTES();

